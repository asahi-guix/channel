* Notes
** Cuirass

Port forward Cuirass web interface to [[http://localhost:8081][localhost]].

#+begin_src sh
  ssh -N -L  8081:localhost:8081 root@www.asahi-guix.org
#+end_src

** NREPL

Start a NREPL server.

#+begin_src sh
  guix shell -Df guix.scm -- guile -c '((@ (nrepl server) run-nrepl-server) #:port 7888)'
#+end_src
** Systems

Build the Asahi Guix operating system image.

#+begin_src sh :results verbatim
  guix system build --load-path=src --system=aarch64-linux share/systems/base.tmpl
#+end_src

Build the Asahi Guix operating system image using the edge kernel.

#+begin_src sh :results verbatim
  guix system build --load-path=src --system=aarch64-linux share/systems/edge.tmpl
#+end_src
** Manifests

Build the operating systems in the =.guix/manifest.scm= manifest.

#+begin_src sh
  guix build -m .guix/manifest.scm
#+end_src

** Installer

#+begin_src sh
  qemu-system-aarch64 \
      -bios ~/.guix-profile/share/firmware/ovmf_aarch64.bin \
      -device virtio-blk,drive=myhd \
      -drive if=none,file=/gnu/store/likzk72q4znlb2fnal0hfp2kbiclc0w3-image.qcow2,id=myhd \
      -machine virt \
      -nic user,model=virtio-net-pci \
      -snapshot
#+end_src

#+begin_src sh
  qemu-system-aarch64 \
      -serial stdio \
      -M virt,highmem=off \
      -accel hvf \
      -cpu cortex-a72 \
      -smp 4 \
      -m 4096 \
      -bios ~/.guix-profile/share/firmware/ovmf_aarch64.bin \
      -device virtio-gpu-pci \
      -display default,show-cursor=on \
      -device qemu-xhci \
      -device usb-kbd \
      -device usb-tablet \
      -device intel-hda \
      -device hda-duplex \
      -drive file=/gnu/store/likzk72q4znlb2fnal0hfp2kbiclc0w3-image.qcow2,if=none
#+end_src

#+begin_src sh
  qemu-system-aarch64 \
      -m 2048 \
      -cpu cortex-a57 -M virt,highmem=off  \
      -drive file=/gnu/store/likzk72q4znlb2fnal0hfp2kbiclc0w3-image.qcow2,if=pflash,format=raw,readonly=on \
      -serial telnet::4444,server,nowait \
      -device virtio-blk-device,drive=hd0,serial="dummyserial" \
      -device virtio-net-device,netdev=net0 \
      -netdev user,id=net0 \
      -vga none -device ramfb \
      -device usb-ehci -device usb-kbd -device usb-mouse -usb \
      -monitor stdio
#+end_src

** Test System
*** Disk Layout

#+begin_src sh :exports both :dir /sudo:: :results verbatim
  fdisk --list /dev/nvme0n1
#+end_src

#+RESULTS:
#+begin_example
Disk /dev/nvme0n1: 1.82 TiB, 2001111162880 bytes, 488552530 sectors
Disk model: APPLE SSD AP2048R
Units: sectors of 1 * 4096 = 4096 bytes
Sector size (logical/physical): 4096 bytes / 4096 bytes
I/O size (minimum/optimal): 4096 bytes / 4096 bytes
Disklabel type: gpt
Disk identifier: A67A7E47-AE3F-436F-9BF7-9DCBCB1151C5

Device              Start       End   Sectors   Size Type
/dev/nvme0n1p1          6    128005    128000   500M unknown
/dev/nvme0n1p2     128006  49030708  48902703 186.5G Apple APFS
/dev/nvme0n1p3   49030709 195440499 146409791 558.5G Apple APFS
/dev/nvme0n1p4  195440500 196050803    610304   2.3G Apple APFS
/dev/nvme0n1p5  196050804 196172915    122112   477M EFI System
/dev/nvme0n1p6  196173056 418995455 222822400   850G Linux filesystem
/dev/nvme0n1p7  418995456 419605759    610304   2.3G Apple APFS
/dev/nvme0n1p8  419605760 419733759    128000   500M EFI System
/dev/nvme0n1p9  419733760 419995903    262144     1G Linux filesystem
/dev/nvme0n1p10 419995904 443409407  23413504  89.3G Linux filesystem
/dev/nvme0n1p11 443409408 444019711    610304   2.3G Apple APFS
/dev/nvme0n1p12 444019712 444147711    128000   500M EFI System
/dev/nvme0n1p13 444147712 444409855    262144     1G Linux filesystem
/dev/nvme0n1p14 444409856 480030463  35620608 135.9G Linux filesystem
/dev/nvme0n1p15 487241816 488552524   1310709     5G unknown
#+end_example

| Device          | Size   | Filesystem       | Description          | UUID                                 |
|-----------------+--------+------------------+----------------------+--------------------------------------|
| /dev/nvme0n1p1  | 500M   | unknown          |                      |                                      |
| /dev/nvme0n1p2  | 186.5G | Apple APFS       |                      |                                      |
| /dev/nvme0n1p3  | 558.5G | Apple APFS       |                      |                                      |
| /dev/nvme0n1p4  | 2.3G   | Apple APFS       | Asahi Guix           |                                      |
| /dev/nvme0n1p5  | 477M   | EFI System       | Asahi Guix EFI       | 9FBE-130E                            |
| /dev/nvme0n1p6  | 850G   | Linux filesystem | Asahi Guix Root      | 56b68fba-21cb-49b5-ac44-84dc382f3426 |
| /dev/nvme0n1p7  | 2.3G   | Apple APFS       | Asahi Fedora         |                                      |
| /dev/nvme0n1p8  | 500M   | EFI System       | Asahi Fedora EFI     | A63E-863C                            |
| /dev/nvme0n1p9  | 1G     | Linux filesystem | Asahi Fedora Boot    | b02b4c25-ab2a-43a0-a381-539b17e531cb |
| /dev/nvme0n1p10 | 89.3G  | Linux filesystem | Asahi Fedora Root    | 990d9cc0-4a80-45f1-ba19-72e86f580a57 |
| /dev/nvme0n1p11 | 2.3G   | Apple APFS       | Asahi Guix Test      |                                      |
| /dev/nvme0n1p12 | 500M   | EFI System       | Asahi Guix Test EFI  | 86E8-4498                            |
| /dev/nvme0n1p13 | 1G     | Linux filesystem | Asahi Guix Test Boot | 7540c875-efa9-459c-9f5a-2cb156f6d709 |
| /dev/nvme0n1p14 | 135.9G | Linux filesystem | Asahi Guix Test Root | fef23143-fe46-4f7f-bbb9-efc46a2a5e48 |
| /dev/nvme0n1p15 | 5G     | unknown          |                      |                                      |

*** Installation

Format file systems.

#+begin_src sh :dir /sudo:: :results verbatim
  sudo mkfs.ext4 -L asahi-guix-root /dev/nvme0n1p14
#+end_src

#+begin_src sh :dir /sudo:: :results verbatim
  sudo tune2fs -O ^metadata_csum_seed /dev/nvme0n1p14
#+end_src

#+RESULTS:
: tune2fs 1.47.0 (5-Feb-2023)

Mount file systems.

#+begin_src sh :dir /sudo:: :results verbatim
  sudo mount /dev/nvme0n1p14 /mnt
  sudo mkdir --parents /mnt/boot/efi
  sudo mount /dev/nvme0n1p12 /mnt/boot/efi
#+end_src

#+RESULTS:

Install the Asahi Guix system.

#+begin_src sh
  sudo guix system init --load-path=src --system=aarch64-linux share/systems/base.tmpl /mnt
#+end_src

Install the Asahi Guix edge system.

#+begin_src sh
  sudo guix system init --load-path=src --system=aarch64-linux share/systems/edge.tmpl /mnt
#+end_src

Install the Asahi Guix Gnome system.

#+begin_src sh
  sudo guix system init --load-path=src --system=aarch64-linux share/systems/gnome.tmpl /mnt
#+end_src

Build systems with time machine.

#+begin_src sh
  guix time-machine --channels=src/asahi/guix/channels.scm -- \
       system build --load-path=src --system=aarch64-linux share/systems/base.tmpl
  guix time-machine --channels=src/asahi/guix/channels.scm -- \
       system build --load-path=src --system=aarch64-linux share/systems/base.tmpl
#+end_src

Install systems with time machine.

#+begin_src sh
  sudo guix time-machine --channels=src/asahi/guix/channels.scm -- \
       system init --load-path=src --system=aarch64-linux share/systems/base.tmpl /mnt
  guix time-machine --channels=src/asahi/guix/channels.scm -- \
       system build --load-path=src --system=aarch64-linux share/systems/base.tmpl
#+end_src

Unmount the file systems.

#+begin_src sh :dir /sudo:: :results verbatim
  sudo umount /mnt/boot/efi
  sudo umount /mnt
#+end_src

#+RESULTS:

** Install Guix on Hetzner Cloud

https://gist.github.com/kristianlm/089a6759a74dcd2e6f702847cf919ed2
** REPL
*** Build operating system
#+begin_src scheme
  (use-modules (asahi guix systems base)
               (guix store))

  (with-store %store
    (run-with-store %store
      (lower-object asahi-base-os)))
#+end_src
** Server
*** Installation via Hetzner rescue system

Clone the Asahi Guix channel.

#+begin_src sh :dir /ssh:root@www.asahi-guix.org:~ :exports code :results verbatim
  git clone https://github.com/asahi-guix/channel.git
  cd channel && bash scripts/hetzner/install-server
#+end_src

*** Swap File

Create the swap file.

#+begin_src sh :dir /ssh:root@www.asahi-guix.org:~ :exports code :results verbatim
  fallocate -l 32G /swapfile
#+end_src

#+RESULTS:

Change file permissions on the swap file.

#+begin_src sh :dir /ssh:root@www.asahi-guix.org:~ :exports code :results verbatim
  chmod 600 /swapfile
#+end_src

#+RESULTS:

Format the swap file.

#+begin_src sh :dir /ssh:root@www.asahi-guix.org:~ :exports code :results verbatim
  mkswap /swapfile
#+end_src

#+RESULTS:
: Setting up swapspace version 1, size = 32 GiB (34359734272 bytes)
: no label, UUID=3906429c-edc8-4793-b50c-6b38ab8feab1

Enable the swap file.

#+begin_src sh :dir /ssh:root@www.asahi-guix.org:~ :exports code :results verbatim
  swapon /swapfile
#+end_src

#+RESULTS:

*** Offloading

Authorize the server to be controlled from the local machine.

#+begin_src sh :exports both :results verbatim
  cat /etc/guix/signing-key.pub | ssh root@www.asahi-guix.org guix archive --authorize
#+end_src

Restart the Guix daemon on the server.

#+begin_src sh :dir /ssh:root@www.asahi-guix.org:~
  systemctl restart guix-daemon
#+end_src

#+RESULTS:

Authorize the local Guix daemon to offload to the server.

#+begin_src sh :dir /ssh:root@localhost:~
  ssh root@www.asahi-guix.org cat /etc/guix/signing-key.pub | guix archive --authorize
#+end_src

Make sure =/etc/guix/machines.scm= on the local machine contains the server.

#+begin_src scheme
  (list (build-machine
         (name "www.asahi-guix.org")
         (systems (list "aarch64-linux"))
         (user "root")
         (host-key "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH5brUrwEPR0MGjymBu2EfkEKULlVyUr80l2rwcXNXZD root@asahi-guix")
         (private-key "/root/.ssh/id_ed25519")))
#+end_src

Verify builds can be offloaded to the server.

#+begin_src sh :dir /ssh:root@localhost:~ :exports both :results verbatim
  guix offload test
#+end_src

#+RESULTS:
: retrieving 1 store item from 'www.asahi-guix.org'...

*** Deployment

Deploy the machine in =src/asahi/guix/machine/server.scm= to the server.

#+begin_src sh
  guix deploy src/asahi/guix/machine/server.scm --load-path=src --verbosity=5
#+end_src

*** VM
Run the server in a virtual machine.

#+begin_src sh
  $(./pre-inst-env guix system vm src/asahi/guix/system/server.scm) \
      -m 2048 \
      -smp 4 \
      -nic user,model=virtio-net-pci,hostfwd=tcp::2222-:22
#+end_src
** Sound
*** Diagnose differences betwen Guix and Fedora
- OS firmware: 12.3 vs 13.5
- m1n1 stage 2: unknown vs v1.4.14
*** Issue with older Eudev packages

https://gitlab.alpinelinux.org/alpine/aports/-/merge_requests/58442/diffs
https://github.com/eudev-project/eudev/pull/271
https://github.com/AsahiLinux/asahi-audio/issues/16

*** Pipewire
- [[https://docs.pipewire.org/page_daemon.html][Pipewire Daemon Configuration]]
*** Wireplumber

#+begin_src sh :results verbatim
  ls -l $(./pre-inst-env guix build asahi-audio)/share/wireplumber
#+end_src

#+RESULTS:
: total 16
: dr-xr-xr-x 2 root root 4096 Jan  1  1970 main.lua.d
: dr-xr-xr-x 2 root root 4096 Jan  1  1970 policy.lua.d
: dr-xr-xr-x 2 root root 4096 Jan  1  1970 scripts
: dr-xr-xr-x 2 root root 4096 Jan  1  1970 wireplumber.conf.d

#+begin_src sh :results verbatim
  wireplumber --config-file "$(./pre-inst-env guix build asahi-audio)/share/wireplumber"
#+end_src
*** Links
- [[https://logs.guix.gnu.org/guix/2023-11-20.log][Guix IRC discussion about Alsa Config Ucm2]]
- [[https://www.reddit.com/r/linuxaudio/comments/197i1yh/pipewire_loading_an_lv2_bass_enhancer_plugin/][Loading the LV2 "bass enhancer" plugin bankstown with pipewire]]
- [[https://github.com/AsahiLinux/docs/wiki/SW:Speakers][Speaker support in Asahi Linux]]
** Fedora Minimal Archive

Download =fedora-40-minimal-202405221600.zip=.

#+begin_src sh :results verbatim
  mkdir -p fedora
  wget -c https://asahilinux-fedora.b-cdn.net/os/fedora-40-minimal-202405221600.zip -o fedora/fedora-40-minimal-202405221600.zip
#+end_src

#+begin_src sh :results verbatim
  cd fedora && unzip -l fedora/fedora-40-minimal-202405221600.zip
#+end_src

*** boot.img

File Type

#+begin_src sh :results verbatim
  file fedora/boot.img
#+end_src

#+RESULTS:
: fedora/boot.img: Linux rev 1.0 ext4 filesystem data, UUID=7540c875-efa9-459c-9f5a-2cb156f6d709, volume name "BOOT" (extents) (64bit) (large files) (huge files)

Fdisk

#+begin_src sh :results verbatim
  fdisk -l fedora/boot.img
#+end_src

#+RESULTS:
: Disk fedora/boot.img: 1 GiB, 1073741824 bytes, 2097152 sectors
: Units: sectors of 1 * 512 = 512 bytes
: Sector size (logical/physical): 512 bytes / 512 bytes
: I/O size (minimum/optimal): 512 bytes / 512 bytes

*** root.img

File Type

#+begin_src sh :results verbatim
  file fedora/root.img
#+end_src

#+RESULTS:
: fedora/root.img: BTRFS Filesystem label "fedora", sectorsize 4096, nodesize 16384, leafsize 16384, UUID=fef23143-fe46-4f7f-bbb9-efc46a2a5e48, 1160269824/3933188096 bytes used, 1 devices

#+begin_src sh :results verbatim
  fdisk -l fedora/root.img
#+end_src

#+RESULTS:
: Disk fedora/root.img: 3.66 GiB, 3933188096 bytes, 7682008 sectors
: Units: sectors of 1 * 512 = 512 bytes
: Sector size (logical/physical): 512 bytes / 512 bytes
: I/O size (minimum/optimal): 512 bytes / 512 bytes
** Mesa
*** Links
- [[https://stackoverflow.com/questions/3127360/what-is-egl-and-how-can-i-use-it][What is EGL And How Can I Use It?]]
